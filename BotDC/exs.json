[
    {
      "nome": "Cálculo do Cabo de Estaiamento",
      "descricao": "A torre estaiada é um tipo de estrutura formada pela união de módulos sobrepostos, formando uma torre que deve ser  empilhada  com cabos de aço de mesma largura desde a base até seu topo, e que não permite sustentação própria contra os efeitos do vento, por isso deve ser bem presa ao solo para impedir que venha a cair.\nUtilizando esse modelo, a empresa Estaio Torres precisa desenvolver um software para calcular o tamanho do cabo de Estaio de aço que fará a sustentação da torre. Você deverá desenvolver um software que, baseado na altura da torre (h) e  na distância entre a torre e ponto fixo do cabo de estaio (d), resulte na quantidade em metros do cabo (x).\n\n \nEx:\nInforme a altura do ponto da torre = 8\nInforme a distância entre a torre e o ponto de estaio, onde o cabo de aço é fixo no chão = 6\nA quantidade de cabos é de = 10.00  metros\n",
      "dificuldade": "Fácil",
      "image": "https://iili.io/JKItTx4.png"
    },
    {
      "nome": "Batalha Naval",
      "descricao": "Batalha Naval é um clássico jogo de estratégia para dois jogadores. Cada jogador posiciona seus navios num grid 10 x 10, e cada rodada do jogo consiste em adivinhar as posições dos navios do adversário. Existem muitas variações das regras, mas tais regras são irrelevantes para esse problema. Estamos interessados num problema mais básico: Dada a lista dos navios e suas posições, você deve determinar se o posicionamento inicial é válido.\nAs linhas e colunas do tabuleiro são numeradas de 1 a 10, e os navios são posicionados na horizontal ou na vertical, ocupando uma sequência contígua de quadrados do tabuleiro. Para esse problema, um posicionamento é válido se:\n·         nenhuma posição é ocupada por mais de um navio;\n·         e todos os navios estão inteiramente contidos no tabuleiro.\n",
      "dificuldade": "Média",
      "image": "https://iili.io/JKItuWl.jpg"
    },
    {
      "nome": "Sistema de Gerenciamento de Biblioteca",
      "descricao": "O Senac MS deseja criar um sistema completo de gerenciamento de uma biblioteca virtual usando a linguagem Python. Você foi contratado para implementar esse sistema utilizando orientação a objetos. Esse sistema deverá fornecer funcionalidades avançadas para gerenciar livros, usuários e interações entre eles. Cada livro terá informações detalhadas, incluindo título, autor, ano de publicação, gênero e o número de cópias disponíveis. Cada usuário será identificado por um nome de usuário único e como informação pessoal, o seu nome completo e CPF.\nO sistema deverá suportar as seguintes operações:\n·         Adicionar um Livro: Os bibliotecários poderão adicionar novos livros à biblioteca, fornecendo todas as informações necessárias, como título, autor, ano de publicação, gênero e o número inicial de cópias disponíveis. Os livros recém-adicionados devem estar automaticamente disponíveis.\n·         Atualizar Informações do Livro: Permitir aos bibliotecários atualizar as informações de um livro existente, como título, autor, ano de publicação e gênero.\n·         Adicionar um Usuário: Os administradores do sistema poderão criar perfis de usuário, especificando informações pessoais, um nome de usuário único, nome completo e CPF para cada usuário.\n·         Pesquisar Livros: Usuários podem pesquisar livros por título, autor ou gênero e receber uma lista de resultados correspondentes.\n·         Empréstimo de Livro: Usuários registrados poderão emprestar livros. O sistema deve reduzir automaticamente o número de cópias disponíveis quando um livro for emprestado.\n·         Devolução de Livro: Usuários registrados poderão devolver livros. O sistema deve aumentar automaticamente o número de cópias disponíveis quando um livro for devolvido.\n·         Reserva de Livro: Usuários registrados poderão reservar livros que estão atualmente emprestados. Eles receberão uma notificação quando o livro estiver disponível para empréstimo.\n·         Listar Livros em Posse de um Usuário: Usuários podem ver a lista de livros emprestados e reservados em seu nome.\n·         Listar Usuários com um Livro em Posse ou Reserva: Os bibliotecários podem verificar quais usuários têm um livro específico em posse ou reservado.\n·         Remover Usuário: Administradores do sistema podem remover usuários e todas as suas informações associadas do sistema.\n·         Listar Livros Disponíveis para Empréstimo: Usuários podem ver a lista de livros atualmente disponíveis para empréstimo, juntamente com o número de cópias disponíveis de cada livro.\n·         Histórico de Empréstimos: O sistema deve manter um histórico de todas as transações de empréstimo e devolução, incluindo datas e detalhes do usuário.\n·         Implemente todas essas funcionalidades de forma organizada e eficiente usando classes e métodos. Certifique-se de que o sistema seja amigável para o usuário e forneça feedback adequado ao realizar cada operação.\n.",
      "dificuldade": "Avançada",
      "image": "https://iili.io/JKItAs2.md.jpg"
    },
    {
      "nome": "A Máquina Do Amor Com Números Binários",
      "descricao": "Foi inventado um novo dispositivo poderoso pela corporação International Beautifull Machines chamado máquina do amor! Dado um barbante feito de dígitos binários, a máquina do amor responde se é feita apenas de amor, ou seja, se basta amor para construir esse barbante. A definição de amor para a máquina do amor é outra série de dígitos binários, dada por um operador humano. Digamos que temos uma string L que representa “amor” e damos uma string S para a máquina do amor. Dizemos que tudo que você precisa é de amor para construir S, se pudermos subtrair repetidamente L de S até chegarmos a L. A subtração definida aqui é a mesma subtração aritmética na base 2. Por esta definição é fácil ver que se L > S (em binário), então S não é feito de amor. Se S = L então S é obviamente feito de amor.\nVejamos um exemplo. Suponha que S =  11011  e L =  11 . Se subtrairmos novamente L de S, obteremos: 11011, 11000, 10101, 10010, 1111, 1100, 1001, 110, 11. Então, dado este L, tudo que você precisa é de amor para construir S. Devido a algumas limitações do máquina do amor, não pode haver string com zeros à esquerda. Ou seja,  0010101 ,  01110101 ,  011111  etc. são strings inválidas. Strings que possuem apenas um dígito também são inválidas (é outra limitação).\nSua tarefa neste problema é: dadas duas strings binárias válidas, S1 e S2, descobrir se é possível ter uma string válida L tal que tanto S1 quanto S2 possam ser feitos apenas de L (ou seja, \ndadas duas strings válidas S1 e S2, descubra se existe pelo menos uma string válida L, como S1 e S2 são feitos apenas de L). Por exemplo, para S1 = 11011 e S2 = 11000, podemos ter L = 11 tal que S1 e S2 são ambos feitos apenas de L (como podemos ver no exemplo acima).\nENTRADA:\nA primeira linha de entrada é um número inteiro positivo N  ( N  <10000) que representa o número de casos de teste. Então, 2*N linhas se seguirão. Cada par de linhas consiste em um caso de teste. Cada linha do par representa cada string ( S1 e S2 ) a ser inserida como entrada para a máquina do amor. Nenhuma string terá menos de 2 ou mais de 30 caracteres. Você pode assumir que \ntodas as strings na entrada serão válidas de acordo com as regras acima.\nSAÍDA:\nPara cada par de strings, você deve imprimir uma das seguintes mensagens:\nPar #p: Tudo que você precisa é de amor!\nPar #p: Amor não é tudo que você precisa!\nOnde p representa o número do par (começando em 1). Você deve imprimir a primeira mensagem se existir pelo menos uma string válida L, como S1 e S2, pode ser feita apenas de L. Caso contrário, imprima a segunda linha.",
      "dificuldade": "Difícil",
      "image": "https://iili.io/JKIt5fS.jpg"
    },
    {
      "nome": "Matriz Transformer",
      "descricao": "Escreva um programa para transformar um array A[1], A[2],..., A[n] de acordo com m instruções. Cada instrução (L, R, v, p) significa: Primeiro, calcule quantos números de A[L] a A[R] (inclusive) são estritamente menores que v, chame esta resposta de k. Em seguida, altere o valor de A[p] para u*k/(R - L + 1), aqui usamos divisão inteira (ou seja, ignorando a parte fracionária).\nENTRADA:\nA primeira linha de entrada contém três inteiros n , m , u ( 1 ≤ n ≤ 300.000, 1 ≤ m ≤ 50.000, 1 ≤ u ≤ 1.000.000.000). Cada uma das próximas n linhas contém um inteiro A [i](1 ≤ A [i] ≤ u ). Cada uma das próximas m linhas contém uma instrução que consiste em quatro inteiros L , R , v , p ( 1 ≤ L ≤ R ≤ n , 1 ≤ v ≤ u , 1 ≤ p≤n ) .\nSAÍDA:\nImprima n linhas, uma para cada número inteiro, o array final.\n",
      "dificuldade": "Média",
      "image": "https://iili.io/JKIt707.md.jpg"
    },
    {
      "nome": "Análise de Lucro de Mercadorias",
      "descricao": "O Sr. Ederson é um comerciante experiente que deseja otimizar seus negócios. Para isso, ele precisa de um programa que o ajude a calcular e analisar o lucro de suas mercadorias. O Sr. Ederson decidiu pedir a ajuda de um desenvolvedor de software para criar um algoritmo que o auxilie nessa tarefa.\n \nO algoritmo deve receber as informações de cada mercadoria.\nApós calcular o lucro de cada mercadoria, o algoritmo deve classifica-las em três categorias:\n \na) Mercadorias com lucro menor que 10%\nb) Mercadorias com lucro entre 10% e 20%\nc) Mercadorias com lucro maior que 20%\nO algoritmo deve então contar quantas mercadorias se enquadram em cada categoria e exibir esses números.\nAlém disso, o algoritmo deve calcular e exibir:\n●     O valor total de compra de todas as mercadorias.\n●     O valor total de venda de todas as mercadorias.\n●     O lucro total de todas as mercadorias.\nExemplo de Entrada:\nCamiseta 20.00 25.00\nTênis 50.00 80.00\nRelógio 100.00 120.00\nBoné 10.00 15.00\nExemplo de Saída:\nMercadorias com lucro menor que 10%: 0\nMercadorias com lucro entre 10% e 20%: 1\nMercadorias com lucro maior que 20%: 3\nValor total de compra: 180.00\nValor total de venda: 240.00\nLucro total: 60.00\n",
      "dificuldade": "Fácil",
      "image": "https://iili.io/JKItYg9.md.jpg"
    },
    {
      "nome": "Soma dos Cubos de Números Pares",
      "descricao": "Em uma tranquila fazenda, um fazendeiro chamado Calebe encontrou um enigma intrigante. O enigma pedia que ele calculasse a soma dos cubos de todos os números pares em um intervalo específico. A resolução deste enigma era vital para ajudar Calebe a planejar suas finanças agrícolas. Calebe, conhecido por sua habilidade com números e contabilidade precisa, estava determinado a resolver o enigma e garantir o sucesso de sua fazenda. No entanto, ele não tinha conhecimento com while, assim ele precisa da sua ajuda para calcular a soma dos cubos dos números pares no intervalo de A a B.\nVocê deve escrever um algoritmo que, dado o intervalo de números inteiros A e B (onde B > A), calcule e imprima a soma dos cubos de todos os números pares no intervalo.\nExemplo de Entrada:\n2 5\nExemplo de Saída:\n72\n",
      "dificuldade": "Média",
      "image": "https://iili.io/JKItcJe.jpg"
    },
    {
      "nome": "Cálculo de Volume de Esferas",
      "descricao": "Em um laboratório de pesquisa de materiais especiais, a cientista Enilda está conduzindo experimentos com esferas de diferentes tamanhos para avaliar suas propriedades únicas. Ela precisa calcular o volume de cada esfera em função do raio, variando o raio de 0 a 20 cm em incrementos de 0.5 cm. Esses cálculos são essenciais para seu estudo.\nSua tarefa é escrever um algoritmo que calcule o volume de esferas para diferentes valores de raio dentro de um intervalo específico, usando um incremento fixo de 0.5 cm. Utilize a fórmula matemática: V = (4/3) x 3.1415 x R³.\nExemplo de Entrada:\n1.0 5.0\nExemplo de Saída:\nRaio: 1.00 cm - Volume: 4.19 cm³\nRaio: 1.50 cm - Volume: 14.14 cm³\nRaio: 2.00 cm - Volume: 33.51 cm³\nRaio: 2.50 cm - Volume: 65.45 cm³\nRaio: 3.00 cm - Volume: 113.10 cm³\nRaio: 3.50 cm - Volume: 179.61 cm³\nRaio: 4.00 cm - Volume: 268.08 cm³\nRaio: 4.50 cm - Volume: 381.66 cm³\nRaio: 5.00 cm - Volume: 523.45 cm³\n",
      "dificuldade": "Média",
      "image": "https://iili.io/JKItl5u.md.jpg"
    },
    {
      "nome": "Cálculo de Perda de Carga em Tubulações",
      "descricao": "O engenheiro hidráulico Gabriel está trabalhando em um projeto para calcular a perda de carga em tubulações para diferentes vazões. A equipe precisa criar uma tabela de perda de carga para vazões que variem de 0,1 l/s até 10, com incrementos de 0,1, usando a fórmula de Hazen-Williams. A tarefa é calcular e registrar essas perdas de carga em uma tabela.\nSeu algoritmo deve calcular a perda de carga J em tubulações para vazões que variem de 0,1 l/s até 10 l/s, com incrementos de 0,1 l/s, usando a fórmula de Hazen-Williams. A fórmula é J = Q^1.85 * 10.643 * D^4.87 * C^-1.85, onde J é a perda de carga (m/1000m), Q é a vazão (m³/s), D é o diâmetro do tubo (m), e C é o coeficiente de rugosidade. Os valores de D e C serão lidos da entrada, mas quando D for 0, o programa deve parar.\nEntrada:\nOs valores de D (diâmetro do tubo) e C (coeficiente de rugosidade) serão lidos da entrada em cada linha separados por um espaço. O programa deve parar quando D for igual a 0.\n \n1 0.2\nSaída:\nPara cada valor de D e C lidos, o programa deve calcular a perda de carga J para vazões que variem de 0,1 l/s até 10 l/s, com incrementos de 0,1 l/s, e imprimir esses valores em uma tabela.\nD (m) | C | Vazão (l/s) | Perda de Carga (m/1000m)\n1.0 | 0.20 | 0.1 | 2.95229\n1.0 | 0.20 | 0.2 | 10.64300\n1.0 | 0.20 | 1.0 | 209.00591\n1.0 | 0.20 | 1.1 | 249.30732\n1.0 | 0.20 | 2.5 | 1138.53815\n1.0 | 0.20 | 2.6 | 1224.21942\n1.0 | 0.20 | 3.5 | 2121.70232\n1.0 | 0.20 | 3.6 | 2235.20930\n1.0 | 0.20 | 3.7 | 2351.42840\n1.0 | 0.20 | 4.7 | 3660.49322\n1.0 | 0.20 | 7.7 | 9123.60368\n1.0 | 0.20 | 7.8 | 9344.01625\n1.0 | 0.20 | 7.9 | 9566.84393\n1.0 | 0.20 | 9.5 | 13456.96863\n1.0 | 0.20 | 9.9 | 14523.91438\n1.0 | 0.20 | 10.0 | 14796.48541\n",
      "dificuldade": "Difícil",
      "image": "https://iili.io/JKIt0Ob.jpg"
    },
    {
      "nome": "Jogo Pedra, Papel e Tesoura",
      "descricao": "O Jogo Pedra, Papel e Tesoura: Uma Diversão Universal\nO jogo  Pedra, Papel e Tesoura  é uma das brincadeiras mais simples e universais já inventadas. Seu apelo universal é evidenciado pelo fato de que é conhecido e jogado em praticamente todas as culturas ao redor do mundo, embora com nomes e variações ligeiramente diferentes.\nAs regras do jogo são tão descomplicadas quanto podem ser. Dois jogadores escolhem simultaneamente entre três opções: pedra, papel ou tesoura. Cada opção vence outra e é derrotada por outra, formando uma hierarquia clara. A pedra quebra a tesoura, a tesoura corta o papel, e o papel envolve a pedra. Se ambos os jogadores escolherem a mesma opção, o resultado é um empate e geralmente se joga novamente.\nO que torna o jogo tão fascinante é a sua imprevisibilidade. Não há vantagem estratégica real, e a vitória muitas vezes se resume à sorte. Essa simplicidade e aleatoriedade tornam o  Pedra, Papel e Tesoura  um jogo justo, acessível a todas as idades e habilidades.\nAgora que vocês já conhecem o jogo, vamos ao trabalho. Desenvolva o jogo de Pedra, papel e tesoura, sem utilizar as bibliotecas. O jogador 1 informa seu nome e escolha uma das opções e ao apertar a tecla ENTER o computador gera sua escolha automaticamente e é realizada a verificação do vencedor conforme dados abaixo:\nDigite o nome do jogador: Enilda\nEscolha pedra, papel ou tesoura: pedra\nEnilda escolheu: pedra\nComputador escolheu: papel\nComputador venceu!\n",
      "dificuldade": "Média",
      "image": "https://iili.io/JKIt1bj.jpg"
    },
    {
      "nome": "Personalização de Assentos em Passagens Aéreas",
      "descricao": "Em meio à ansiedade e antecipação de uma nova aventura, a compra de uma passagem de avião é o primeiro passo emocionante para desvendar um novo destino.\nParte 1: A Emoção da Decisão\nA decisão começa no momento em que você decide sua próxima aventura. Com destinos que variam de paisagens pitorescas a metrópoles vibrantes, a escolha é infinita.\nParte 2: Personalizando Sua Viagem\nA personalização é a palavra perfeita quando se trata da compra de passagens aéreas modernas e expetaculares.\nParte 3: O Processo de Escolha do Assento\nO processo de escolha do assento é uma experiência interativa que faz parte da compra da passagem de avião, principalmente quando conta com um mapa moderno interativo dos assentos livres e ocupados. \nParte 4: A Aventura Começa\nApós escolher seu assento e confirmar sua passagem, você está oficialmente pronto para embarcar em sua jornada.\nPara que a viajem aconteça sem nenhum problema no aeroporto, você deverá desenvolver um sistema que definirá quantas fileiras tem no avião, e quantos assentos por fileira. Posteriormente você apresentará um menu de opções onde o usuário poderá reservar um assento, mostrar os assentos reservados e sair do programa.\n\n**Exemplo:**\n\nDigite o número de fileiras: 2\nDigite o número de assentos por fileira: 30\nEscolha uma opção:\n1 - Reservar assento\n2 - Mostrar mapa de assentos\n3 - Sair\n1\nDigite o número da fileira: 1\nDigite o número do assento: 20\nAssento 1-20 reservado com sucesso.\nEscolha uma opção:\n1 - Reservar assento\n2 - Mostrar mapa de assentos\n3 - Sair\n1\nDigite o número da fileira: 1\nDigite o número do assento: 21\nAssento 1-21 reservado com sucesso.\nEscolha uma opção:\n1 - Reservar assento\n2 - Mostrar mapa de assentos\n3 - Sair\n2\nO O O O O O O O O O O O O O O O O O O X X O O O O O O O O O\nO O O O O O O O O O O O O O O O O O O O O O O O O O O O O O\n",
      "dificuldade": "Média",
      "image": "https://iili.io/JKItGzx.jpg"
    },
    {
      "nome": "Rastreamento de Pacotes",
      "descricao": "Vivemos em uma era de movimento constante, onde produtos e presentes podem viajar ao redor do mundo em questão de dias, horas e até mesmo minutos. Mas como podemos acompanhar essa jornada? Bem-vindo ao mundo do rastreamento de pacotes, onde a tecnologia se une à nossa curiosidade para nos dar uma visão única do movimento dos nossos itens.\nParte 1: Os Bastidores da Entrega\nPor trás de cada pacote que recebemos está uma complexa rede de logística e transporte. De navios a aviões, caminhões e centros de distribuição, nossos pacotes viajam por uma dança coreografada de processos até chegarem às nossas portas. Rastrear pacotes nos permite espiar essa dança e nos conectar com a jornada que nossos produtos fazem.\nParte 2: Como Funciona o Rastreamento\nO rastreamento de pacotes é possível graças a códigos de rastreamento únicos atribuídos a cada item. Esses códigos servem como passaportes digitais, registrando cada etapa do caminho, desde o momento em que o pacote é despachado até a sua entrega final. Com esses códigos, podemos obter informações atualizadas sobre a localização do pacote, seu status de entrega e até mesmo estimativas de quando ele chegará ao destino.\nParte 3: A Antecipação e a Ansiedade\nQuem nunca sentiu a emoção da antecipação ao rastrear um pacote esperado? À medida que as atualizações de rastreamento aparecem na tela do nosso dispositivo, somos transportados para uma jornada virtual junto com o nosso pacote. Cada notificação é como um capítulo de uma história emocionante, aproximando-nos cada vez mais do momento em que finalmente teremos o item em nossas mãos.\nParte 4: Além do Rastreamento\nCrie um sistema para rastrear o status de pacotes enviados. Lide com erros ao inserir informações do pacote e ao rastrear.\n",
      "dificuldade": "Média",
      "image": "https://iili.io/JKItMWQ.jpg"
    },
    {
      "nome": "Campeonato de Futebol",
      "descricao": "CAMPEONATO: Dois times, TIME A e TIME B, participam de um campeonato de futebol, juntamente com outros times. Cada vitória conta três pontos, cada empate um ponto. Fica melhor classificado no campeonato um time que tenha mais pontos. Em caso de empate no número de pontos, fica melhor classificado o time que tiver maior saldo de gols. Se o número de pontos e o saldo de gols forem os mesmos para os dois times, então os dois times estão empatados no campeonato. Dados os números de vitórias e empates, e os saldos de gols dos dois times, sua tarefa é determinar qual dos dois está melhor classificado, ou se eles estão empatados no campeonato.\n\nDADOS DE ENTRADA:\nA entrada é composta por números inteiros, respectivamente o número de vitórias, empates e saldo de gols do TIME A, o número de vitórias do TIME B, o número de empates do TIME B e o saldo de gols do TIME B.\n \nDADOS DE SAÍDA:\nDe acordo com as informações apresentadas, seu programa em Python deve imprimir uma única linha. Se TIME A é melhor classificado que TIME B, a linha deve conter apenas ‘TIME A’; se TIME B é melhor classificado que TIME A, a linha deve conter apenas ‘TIME B’; e se os dois times estão empatados a linha deve conter apenas o caractere ‘EMPATE’.\n",
      "dificuldade": "Fácil",
      "image": "https://iili.io/JKItVsV.jpg"
    },
    {
      "nome": "Cálculo do Desvio Padrão de Sacas de Soja",
      "descricao": "A Indústria AgroMS, especializada na produção e processamento de soja, encontra-se atualmente na busca por um fornecedor de matéria-prima confiável. O Gerente da empresa notou que todas as empresas de sacas de soja apresentam uma média de peso semelhante para seus produtos. Dessa forma, precisa analisar a variabilidade das sacas de soja que chegam à sua fábrica. Para isso, eles coletaram dados sobre o peso das sacas de soja de diferentes lotes ao longo de um período de tempo. Agora, eles desejam calcular o desvio padrão desses pesos para entender o quão consistentes ou variáveis são as entregas das sacas de soja.\nO desvio padrão é uma medida que expressa o grau de dispersão de um conjunto de dados. Em outras palavras, o desvio padrão indica o quão uniforme são os dados. Quanto mais próximo de zero for o desvio padrão, mais homogêneo são os dados.\nO desvio padrão (Dp) é calculado usando-se a seguinte fórmula:\n \nSendo,\n∑: símbolo de somatório. Indica que temos que somar todos os termos, desde a primeira posição (i=1) até a posição n\nxi: valor na posição i no conjunto de dados\nx̅: média aritmética dos dados\nn: quantidade de dados\n\n Como programador responsável pela análise, você deve criar um algoritmo para calcular o desvio padrão de um conjunto de dados sobre as sacas de soja. Em seguida apresente o resultado para ajudar o Gerente a tomar decisões sobre seu processo para definir o fornecedor de matéria-prima.\n",
      "dificuldade": "Difícil",
      "image": "https://iili.io/JKItXqB.png"
    },
    {
      "nome": "Cálculo de Distância Euclidiana entre Dois Pontos",
      "descricao": "Você é um engenheiro de tráfego recém-contratado em uma cidade chamada  Hubville . Esta cidade é conhecida por suas estradas bem planejadas e seu compromisso com a segurança no trânsito. O prefeito precisa calcular a distância entre dois pontos da cidade para lançar a obra de uma nova avenida. \nOs dois pontos são referenciados como  Ponto A  e  Ponto B  na cidade. O departamento de trânsito forneceu as coordenadas (x, y) desses pontos:\n- Ponto A: (1, 3)\n- Ponto B: (5, 7)\nO prefeito quer que você calcule a distância entre esses dois pontos usando o método da  distância euclidiana . Este método é amplamente usado para calcular a distância entre dois pontos em um plano cartesiano em 2D.\nDados dois pontos (x1, y1) e (x2, y2),\n \na distância entre eles pode ser calculada segundo a fórmula apresentado na imagem\nSua tarefa é criar uma função em Python que receba as coordenadas dos dois pontos como parâmetro  e calcule a distância euclidiana entre eles. Em seguida, imprima o resultado para que o prefeito possa tomar decisões sobre o lançamento da nova avenida.\n",
      "dificuldade": "Difícil",
      "image": "https://iili.io/JKIth0P.png"
    },
    {
      "nome": "Controle de Semáforo",
      "descricao": "O Departamento de Trânsito de uma cidade deseja implementar um sistema de controle de semáforo em um ponto crítico da cidade. Este sistema de semáforo é composto por três cores: vermelho, amarelo e verde, representadas por valores binários 1 e 0. Cada cor tem sua própria entrada binária para verificar seu status:\nVermelho: 1 para ligado, 0 para desligado.\nAmarelo: 1 para ligado, 0 para desligado.\nVerde: 1 para ligado, 0 para desligado.\nO semáforo deve operar de acordo com as seguintes regras:\n●    Se todas as entradas estiverem desligadas (0), deverá apresentar a mensagem: Semáforo desligado! E o Status: 0 0 0\n \n●      Se apenas uma entrada estiver ligada (1), o semáforo deverá exibir qual cor está ligada: Vermelho ON! E o Status: 1 0 0\n \n● Se mais de uma entrada estiver ligada ao mesmo tempo, deverá apresentar a mensagem: Entrada inválida!\nDada as instruções, seu objetivo é escrever um programa em Python que, dado o status das três cores, determine qual cor deve ser exibida no semáforo.\n",
      "dificuldade": "Fácil",
      "image": "https://iili.io/JKItNdF.jpg"
    }
]